{"version":3,"sources":["components/Todo.js","reportWebVitals.js","index.js"],"names":["Task","task","index","completeTask","removeTask","className","style","textDecoration","completed","title","background","onClick","CreateTask","addTask","useState","value","setValue","onSubmit","e","preventDefault","type","placeholder","onChange","target","Todo","tasksRemaining","setTasksRemaining","tasks","setTasks","useEffect","filter","length","newTasks","splice","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAGA,SAASA,EAAT,GAA0D,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,WAC1C,OACC,sBACCC,UAAU,OACVC,MAAO,CAAEC,eAAgBN,EAAKO,UAAY,eAAiB,IAF5D,UAIEP,EAAKQ,MACN,wBAAQH,MAAO,CAAEI,WAAY,OAASC,QAAS,kBAAMP,EAAWF,IAAhE,eAGA,wBAAQS,QAAS,kBAAMR,EAAaD,IAApC,yBAKH,SAASU,EAAT,GAAkC,IAAZC,EAAW,EAAXA,QAAW,EACNC,mBAAS,IADH,mBACzBC,EADyB,KAClBC,EADkB,KAYhC,OACC,sBAAMC,SAVc,SAAAC,GACpBA,EAAEC,iBACGJ,IAGLF,EAAQE,GACRC,EAAS,MAIT,SACC,uBACCI,KAAK,OACLf,UAAU,QACVU,MAAOA,EACPM,YAAY,iBACZC,SAAU,SAAAJ,GAAC,OAAIF,EAASE,EAAEK,OAAOR,YAyEtBS,MAnEf,WAAgB,MAE6BV,mBAAS,GAFtC,mBAERW,EAFQ,KAEQC,EAFR,OAIWZ,mBAAS,CAClC,CACCL,MAAO,qBACPD,WAAW,GAEZ,CACCC,MAAO,qBACPD,WAAW,GAEZ,CACCC,MAAO,qBACPD,WAAW,KAfE,mBAIRmB,EAJQ,KAIDC,EAJC,KAmBfC,qBAAU,WACTH,EAAkBC,EAAMG,QAAO,SAAA7B,GAAI,OAAKA,EAAKO,aAAWuB,UACtD,CAACJ,IAIJ,IAOMxB,EAAe,SAAAD,GACpB,IAAM8B,EAAQ,YAAOL,GACrBK,EAAS9B,GAAOM,WAAY,EAC5BoB,EAASI,IAGJ5B,EAAa,SAAAF,GAClB,IAAM8B,EAAQ,YAAOL,GACrBK,EAASC,OAAO/B,EAAO,GACvB0B,EAASI,IAGV,OACC,sBAAK3B,UAAU,iBAAf,UACC,sBAAKA,UAAU,SAAf,4BAAwCoB,EAAxC,OAEA,qBAAKpB,UAAU,QAAf,SACEsB,EAAMO,KAAI,SAACjC,EAAMC,GAAP,OACV,cAACF,EAAD,CACCC,KAAMA,EACNC,MAAOA,EACPC,aAAcA,EACdC,WAAYA,GACPF,QAKR,qBAAKG,UAAU,cAAf,SACC,cAACO,EAAD,CAAYC,QApCC,SAAAJ,GACf,IAAMuB,EAAQ,sBAAOL,GAAP,CAAc,CAAElB,QAAOD,WAAW,KAChDoB,EAASI,YC1DIG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f220c9d6.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Todo.css';\r\n\r\nfunction Task({ task, index, completeTask, removeTask }) {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"task\"\r\n\t\t\tstyle={{ textDecoration: task.completed ? 'line-through' : '' }}\r\n\t\t>\r\n\t\t\t{task.title}\r\n\t\t\t<button style={{ background: 'red' }} onClick={() => removeTask(index)}>\r\n\t\t\t\tx\r\n\t\t\t</button>\r\n\t\t\t<button onClick={() => completeTask(index)}>Complete</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction CreateTask({ addTask }) {\r\n\tconst [value, setValue] = useState('');\r\n\r\n\tconst handleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tif (!value) return;\r\n\r\n\t\t// passing value to Parent Component's (Todo) addTask function\r\n\t\taddTask(value);\r\n\t\tsetValue('');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tclassName=\"input\"\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tplaceholder=\"Add a new task\"\r\n\t\t\t\tonChange={e => setValue(e.target.value)}\r\n\t\t\t/>\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nfunction Todo() {\r\n\t// Hook registed for the pending tasks\r\n\tconst [tasksRemaining, setTasksRemaining] = useState(0);\r\n\t// Hook registed for tasks\r\n\tconst [tasks, setTasks] = useState([\r\n\t\t{\r\n\t\t\ttitle: 'Vist AccessBank HQ',\r\n\t\t\tcompleted: true\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Explore Marina Bay',\r\n\t\t\tcompleted: true\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Try Uber Boat Ride',\r\n\t\t\tcompleted: false\r\n\t\t}\r\n\t]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetTasksRemaining(tasks.filter(task => !task.completed).length);\r\n\t}, [tasks]);\r\n\r\n\t// cb func passed as a prop to CreateTask Component\r\n\t// inorder to receive its parameter from child component\r\n\tconst addTask = title => {\r\n\t\tconst newTasks = [...tasks, { title, completed: false }];\r\n\t\tsetTasks(newTasks);\r\n\t};\r\n\r\n\t// cb func passed as a prop to Task Component\r\n\t// inorder to receive its parameter from child component\r\n\tconst completeTask = index => {\r\n\t\tconst newTasks = [...tasks];\r\n\t\tnewTasks[index].completed = true;\r\n\t\tsetTasks(newTasks);\r\n\t};\r\n\r\n\tconst removeTask = index => {\r\n\t\tconst newTasks = [...tasks];\r\n\t\tnewTasks.splice(index, 1);\r\n\t\tsetTasks(newTasks);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"todo-container\">\r\n\t\t\t<div className=\"header\">Pending tasks ({tasksRemaining})</div>\r\n\r\n\t\t\t<div className=\"tasks\">\r\n\t\t\t\t{tasks.map((task, index) => (\r\n\t\t\t\t\t<Task\r\n\t\t\t\t\t\ttask={task}\r\n\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\tcompleteTask={completeTask}\r\n\t\t\t\t\t\tremoveTask={removeTask}\r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"create-task\">\r\n\t\t\t\t<CreateTask addTask={addTask} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Todo;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Todo from './components/Todo';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Todo />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}